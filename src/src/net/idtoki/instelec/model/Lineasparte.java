
package net.idtoki.instelec.model;


import java.util.logging.Logger;

import net.zylk.tools.format.FormatUtils;

import org.apache.torque.TorqueException;
import org.apache.torque.om.Persistent;

/**
 * The skeleton for this class was autogenerated by Torque on:
 *
 * [Thu Aug 10 13:35:35 CEST 2006]
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 */
public  class Lineasparte
    extends net.idtoki.instelec.model.BaseLineasparte
    implements Persistent
{

private static final Logger logger = Logger.getLogger("net.idtoki.instelec.model.Lineasparte");


		
	public String getIdlineaparteLineasparteParsed()
	{
		return FormatUtils.genericParsedStr(this.getIdlineaparte() + "");
		}					

		
	public String getIdparteLineasparteParsed()
	{
		String strFK=null;
		try
		{
			strFK=this.getPartes().getULContentPartesParsed();
		}
		catch (TorqueException te) {
			logger.severe("No se ha podido localizar Partes. getIdparteLineasparteParsed()" );
			te.printStackTrace();
		}
		return FormatUtils.genericParsedStr(strFK);		
		}					

		
	public String getFechaLineasparteParsed()
	{
				return FormatUtils.genericParsedStr(FormatUtils.aaaammdd2ddmmaaaa(this.getFecha(),"-"));		
				}					

		
	public String getHorasLineasparteParsed()
	{
		return FormatUtils.genericParsedStr(this.getHoras() + "");	 
		}					

		
	public String getObservacionesLineasparteParsed()
	{
				return FormatUtils.genericParsedStr(this.getObservaciones());		
				}					


	public String getPathLineasparteParsed(String strQueryString) throws TorqueException
	{	
	  String a = "";
	  if (strQueryString.indexOf("partes") != -1)	  
	  	a = a + this.getPartes().getPathPartesParsed(strQueryString) + "/";
	  a = a + this.getIdlineaparte()+ "(" + this.getFechaLineasparteParsed() + ")";  
	  return a;
	}

	public String getULContentLineasparteParsed() throws TorqueException
	{
		return FormatUtils.genericParsedStr(this.getIdlineaparte() + "-" + this.getFechaLineasparteParsed());	
	}	

	
	public String getDeleteLineasparte()
	{
		return "<a href='#' class='eliminar' id='getDeleteLineasparte" + this.getIdlineaparte() + "'>&#160;&#160;&#160;&#160;</a>";
	}	
	public String getEditLineasparte()
	{
		return "<a href='#' class='edicion' id='getEditLineasparte" + this.getIdlineaparte() + "'>&#160;&#160;&#160;&#160;</a>";
	}

}
