
package net.idtoki.instelec.model;


import java.util.logging.Logger;

import net.zylk.tools.format.FormatUtils;

import org.apache.torque.TorqueException;
import org.apache.torque.om.Persistent;

import com.workingdogs.village.DataSetException;
import net.idtoki.instelec.manager.TareasManager;

/**
 * The skeleton for this class was autogenerated by Torque on:
 *
 * [Thu Aug 10 13:35:35 CEST 2006]
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 */
public  class Tareas
    extends net.idtoki.instelec.model.BaseTareas
    implements Persistent
{

private static final Logger logger = Logger.getLogger("net.idtoki.instelec.model.Tareas");


		
	public String getIdtareaTareasParsed()
	{
		return FormatUtils.genericParsedStr(this.getIdtarea() + "");
		}					

		
	public String getFechainicioTareasParsed()
	{
				return FormatUtils.genericParsedStr(FormatUtils.aaaammdd2ddmmaaaa(this.getFechainicio(),"-"));		
				}					

		
	public String getHorasTareasParsed()
	{
		return FormatUtils.genericParsedStr(this.getHoras() + "");	 
		}					

		
	public String getIdordenTareasParsed()
	{
		String strFK=null;
		try
		{
			strFK=this.getOrdenestrabajo().getULContentOrdenestrabajoParsed();
		}
		catch (TorqueException te) {
			logger.severe("No se ha podido localizar Ordenestrabajo. getIdordenTareasParsed()" );
			te.printStackTrace();
		}
		return FormatUtils.genericParsedStr(strFK);		
		}					

		
	public String getIdtipotareaTareasParsed()
	{
		String strFK=null;
		try
		{
			strFK=this.getTipotareas().getULContentTipotareasParsed();
		}
		catch (TorqueException te) {
			logger.severe("No se ha podido localizar Tipotareas. getIdtipotareaTareasParsed()" );
			te.printStackTrace();
		}
		return FormatUtils.genericParsedStr(strFK);		
		}					

		
	public String getIdcategoriaTareasParsed()
	{
		String strFK=null;
		try
		{
			strFK=this.getCategorias().getULContentCategoriasParsed();
		}
		catch (TorqueException te) {
			logger.severe("No se ha podido localizar Categorias. getIdcategoriaTareasParsed()" );
			te.printStackTrace();
		}
		return FormatUtils.genericParsedStr(strFK);		
		}					

		
	public String getObservacionesTareasParsed()
	{
				return FormatUtils.genericParsedStr(this.getObservaciones());		
				}					


	public String getPathTareasParsed(String strQueryString) throws TorqueException
	{	
	  String a = "";
	  if (strQueryString.indexOf("ordenestrabajo") != -1)	  
	  	a = a + this.getOrdenestrabajo().getPathOrdenestrabajoParsed(strQueryString) + "/";
	  if (strQueryString.indexOf("tipotareas") != -1)	  
	  	a = a + this.getTipotareas().getPathTipotareasParsed(strQueryString) + "/";
	  if (strQueryString.indexOf("categorias") != -1)	  
	  	a = a + this.getCategorias().getPathCategoriasParsed(strQueryString) + "/";
	  a = a + this.getTipotareas().getDescripcionTipotareasParsed();  
	  return a;
	}

	public String getULContentTareasParsed() throws TorqueException
	{
		return FormatUtils.genericParsedStr(this.getIdtarea() + "-" + this.getTipotareas().getDescripcionTipotareasParsed());	
	}	

	public String getHijosMaterialesTareas()
	{
		return "<a href='#' class='hijos' id='getHijosMaterialesTareas" + this.getIdtarea() + "' title='Materiales'>&#160;&#160;&#160;&#160;</a>";
	}
	
	public String getDeleteTareas()
	{
		return "<a href='#' class='eliminar' id='getDeleteTareas" + this.getIdtarea() + "'>&#160;&#160;&#160;&#160;</a>";
	}	
	public String getEditTareas()
	{
		return "<a href='#' class='edicion' id='getEditTareas" + this.getIdtarea() + "'>&#160;&#160;&#160;&#160;</a>";
	}
	
	public String getImporteCalculadoTareasParsed() throws TorqueException,DataSetException
	{
		double importeCalculado = TareasManager.getImporteCalculadoTareas(this.getIdtarea());
		return importeCalculado+"";
	}	
	public String getManoObraCalculadoTareasParsed() throws TorqueException,DataSetException
	{
		return (double)Math.round(this.getHoras()*this.getCategorias().getCoste()*100)/100 +"";
	}	
}
