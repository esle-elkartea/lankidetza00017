
package net.idtoki.instelec.model;


import java.util.logging.Logger;

import net.idtoki.instelec.manager.OrdenestrabajoManager;
import net.zylk.tools.format.FormatUtils;

import org.apache.torque.TorqueException;
import org.apache.torque.om.Persistent;

import com.workingdogs.village.DataSetException;

/**
 * The skeleton for this class was autogenerated by Torque on:
 *
 * [Thu Aug 10 13:35:35 CEST 2006]
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 */
public  class Ordenestrabajo
    extends net.idtoki.instelec.model.BaseOrdenestrabajo
    implements Persistent
{

private static final Logger logger = Logger.getLogger("net.idtoki.instelec.model.Ordenestrabajo");


		
	public String getIdordenOrdenestrabajoParsed()
	{
		return FormatUtils.genericParsedStr(this.getIdorden() + "");
		}					

		
	public String getFechainicioOrdenestrabajoParsed()
	{
				return FormatUtils.genericParsedStr(FormatUtils.aaaammdd2ddmmaaaa(this.getFechainicio(),"-"));		
				}					

		
	public String getFechafinOrdenestrabajoParsed()
	{
				return FormatUtils.genericParsedStr(FormatUtils.aaaammdd2ddmmaaaa(this.getFechafin(),"-"));		
				}					

		
	public String getIdtrabajoOrdenestrabajoParsed()
	{
		String strFK=null;
		try
		{
			strFK=this.getTrabajos().getULContentTrabajosParsed();
		}
		catch (TorqueException te) {
			logger.severe("No se ha podido localizar Trabajos. getIdtrabajoOrdenestrabajoParsed()" );
			te.printStackTrace();
		}
		return FormatUtils.genericParsedStr(strFK);		
		}					

		
	public String getDescripcionOrdenestrabajoParsed()
	{
				return FormatUtils.genericParsedStr(this.getDescripcion());		
				}					

		
	public String getObservacionesOrdenestrabajoParsed()
	{
				return FormatUtils.genericParsedStr(this.getObservaciones());		
				}					

		
	public String getTipomantenimientoOrdenestrabajoParsed()
	{	
		String cadena="";
		switch (this.getTipomantenimiento())
		{
		case 0:
			cadena="0-Preventivo";
			break;
		case 1:
			cadena="1-Correctivo";
			break;
		}
		return cadena;		
		
		}	
	
	public String getTipomantenimientoOrdenestrabajoParsedLabel()
	{	
		String cadena="";
		switch (this.getTipomantenimiento())
		{
		case 0:
			cadena="<span class='Estilo_00'>Preventivo</span>";
			break;
		case 1:
			cadena="<span class='Estilo_01'>Correctivo</span>";
			break;
		default:
			cadena="<span class='Estilo_02'>n/a</span>";
			break;
		}
		return cadena;		
		
		}		

		
	public String getUrgenciaOrdenestrabajoParsed()
	{
		String cadena="";
		switch (this.getUrgencia())
		{
		case 0:
			cadena="0-No urgente";
			break;
		case 1:
			cadena="1-Urgente";
			break;
		case 2:
			cadena="2-Muy urgente";
			break;
		}
		return cadena;		
		}
	
	public String getUrgenciaOrdenestrabajoParsedLabel()
	{
		String cadena="";
		switch (this.getUrgencia())
		{
		case 0:
			cadena="<span class='Estilo_00'>No urgente</span>";
			break;
		case 1:
			cadena="<span class='Estilo_01'>Urgente</span>";
			break;
		case 2:
			cadena="<span class='Estilo_02'>Muy urgente</span>";
			break;
		default:
			cadena="<span class='Estilo_03'>n/a</span>";
			break;
		}
		return cadena;		
		}	

		
	public String getSintomasOrdenestrabajoParsed()
	{
				return FormatUtils.genericParsedStr(this.getSintomas());		
				}					

		
	public String getCausasOrdenestrabajoParsed()
	{
				return FormatUtils.genericParsedStr(this.getCausas());		
				}					

		
	public String getImporteOrdenestrabajoParsed()
	{
		return FormatUtils.genericParsedStr(this.getImporte() + "");	 
		}					


	public String getPathOrdenestrabajoParsed(String strQueryString) throws TorqueException
	{	
	  String a = "";
	  if (strQueryString.indexOf("trabajos") != -1)	  
	  	a = a + this.getTrabajos().getPathTrabajosParsed(strQueryString) + "/";
	  a = a + this.getDescripcionOrdenestrabajoParsed();  
	  return a;
	}

	public String getULContentOrdenestrabajoParsed() throws TorqueException
	{
		return FormatUtils.genericParsedStr(this.getIdorden() + "-" + this.getDescripcionOrdenestrabajoParsed());	
	}	

	public String getHijosPartesOrdenestrabajo()
	{
		return "<a href='#' class='hijos' id='getHijosPartesOrdenestrabajo" + this.getIdorden() + "' title='Partes'>&#160;&#160;&#160;&#160;</a>";
	}
	public String getHijosTareasOrdenestrabajo()
	{
		return "<a href='#' class='hijos' id='getHijosTareasOrdenestrabajo" + this.getIdorden() + "' title='Tareas'>&#160;&#160;&#160;&#160;</a>";
	}
	
	public String getDeleteOrdenestrabajo()
	{
		return "<a href='#' class='eliminar' id='getDeleteOrdenestrabajo" + this.getIdorden() + "'>&#160;&#160;&#160;&#160;</a>";
	}	
	public String getEditOrdenestrabajo()
	{
		return "<a href='#' class='edicion' id='getEditOrdenestrabajo" + this.getIdorden() + "'>&#160;&#160;&#160;&#160;</a>";
	}

	public String getImporteCalculadoOrdenestrabajoParsed() throws TorqueException,DataSetException
	{
		double importeCalculado = OrdenestrabajoManager.getImporteCalculadoOrdenestrabajo(this.getIdorden());
		return importeCalculado+"";
	}	
	
	public String getManoObraCalculadoOrdenestrabajoParsed() throws TorqueException,DataSetException
	{
		double importeCalculado = OrdenestrabajoManager.getManoObraCalculadoOrdenestrabajo(this.getIdorden());
		return importeCalculado+"";
	}	
	
}
