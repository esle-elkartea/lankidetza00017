
package net.idtoki.instelec.model;


import java.util.logging.Logger;

import net.zylk.tools.format.FormatUtils;

import org.apache.torque.TorqueException;
import org.apache.torque.om.Persistent;

/**
 * The skeleton for this class was autogenerated by Torque on:
 *
 * [Thu Aug 10 13:35:35 CEST 2006]
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 */
public  class Trabajadores
    extends net.idtoki.instelec.model.BaseTrabajadores
    implements Persistent
{

private static final Logger logger = Logger.getLogger("net.idtoki.instelec.model.Trabajadores");


		
	public String getIdtrabajadorTrabajadoresParsed()
	{
		return FormatUtils.genericParsedStr(this.getIdtrabajador() + "");
		}					

		
	public String getIdcategoriaTrabajadoresParsed()
	{
		String strFK=null;
		try
		{
			strFK=this.getCategorias().getULContentCategoriasParsed();
		}
		catch (TorqueException te) {
			logger.severe("No se ha podido localizar Categorias. getIdcategoriaTrabajadoresParsed()" );
			te.printStackTrace();
		}
		return FormatUtils.genericParsedStr(strFK);		
		}					

		
	public String getNifTrabajadoresParsed()
	{
				return FormatUtils.genericParsedStr(this.getNif());		
				}					

		
	public String getNombreTrabajadoresParsed()
	{
				return FormatUtils.genericParsedStr(this.getNombre());		
				}					

		
	public String getApellidounoTrabajadoresParsed()
	{
				return FormatUtils.genericParsedStr(this.getApellidouno());		
				}					

		
	public String getApellidodosTrabajadoresParsed()
	{
				return FormatUtils.genericParsedStr(this.getApellidodos());		
				}					

		
	public String getFechaaltaTrabajadoresParsed()
	{
				return FormatUtils.genericParsedStr(FormatUtils.aaaammdd2ddmmaaaa(this.getFechaalta(),"-"));		
				}					

		
	public String getFechabajaTrabajadoresParsed()
	{
				return FormatUtils.genericParsedStr(FormatUtils.aaaammdd2ddmmaaaa(this.getFechabaja(),"-"));		
				}					

		
	public String getNumerossTrabajadoresParsed()
	{
				return FormatUtils.genericParsedStr(this.getNumeross());		
				}					

		
	public String getDireccionTrabajadoresParsed()
	{
				return FormatUtils.genericParsedStr(this.getDireccion());		
				}					

		
	public String getCpTrabajadoresParsed()
	{
				return FormatUtils.genericParsedStr(this.getCp());		
				}					

		
	public String getIdlocalidadTrabajadoresParsed()
	{
		String strFK=null;
		try
		{
			strFK=this.getLocalidades().getULContentLocalidadesParsed();
		}
		catch (TorqueException te) {
			logger.severe("No se ha podido localizar Localidades. getIdlocalidadTrabajadoresParsed()" );
			te.printStackTrace();
		}
		return FormatUtils.genericParsedStr(strFK);		
		}					

		
	public String getTelefonoTrabajadoresParsed()
	{
				return FormatUtils.genericParsedStr(this.getTelefono());		
				}					

		
	public String getMovilTrabajadoresParsed()
	{
				return FormatUtils.genericParsedStr(this.getMovil());		
				}					

		
	public String getEmailTrabajadoresParsed()
	{
				return FormatUtils.genericParsedStr(this.getEmail());		
				}					

		
	public String getObservacionesTrabajadoresParsed()
	{
				return FormatUtils.genericParsedStr(this.getObservaciones());		
				}					


	public String getPathTrabajadoresParsed(String strQueryString) throws TorqueException
	{	
	  String a = "";
	  if (strQueryString.indexOf("categorias") != -1)	  
	  	a = a + this.getCategorias().getPathCategoriasParsed(strQueryString) + "/";
	  if (strQueryString.indexOf("localidades") != -1)	  
	  	a = a + this.getLocalidades().getPathLocalidadesParsed(strQueryString) + "/";
	  a = a + this.getNombreTrabajadoresParsed() + " " + this.getApellidounoTrabajadoresParsed() + " " + this.getApellidodosTrabajadoresParsed();  
	  return a;
	}

	public String getULContentTrabajadoresParsed() throws TorqueException
	{
		return FormatUtils.genericParsedStr(this.getIdtrabajador() + "-" + this.getNombreTrabajadoresParsed() + " " + this.getApellidounoTrabajadoresParsed() + " " + this.getApellidodosTrabajadoresParsed());	
	}	

	public String getHijosPartesTrabajadores()
	{
		return "<a href='#' class='hijos' id='getHijosPartesTrabajadores" + this.getIdtrabajador() + "' title='Partes'>&#160;&#160;&#160;&#160;</a>";
	}
	
	public String getDeleteTrabajadores()
	{
		return "<a href='#' class='eliminar' id='getDeleteTrabajadores" + this.getIdtrabajador() + "'>&#160;&#160;&#160;&#160;</a>";
	}	
	public String getEditTrabajadores()
	{
		return "<a href='#' class='edicion' id='getEditTrabajadores" + this.getIdtrabajador() + "'>&#160;&#160;&#160;&#160;</a>";
	}

}
