
package net.idtoki.instelec.model;


import java.util.logging.Logger;

import net.zylk.tools.format.FormatUtils;

import org.apache.torque.TorqueException;
import org.apache.torque.om.Persistent;

import com.workingdogs.village.DataSetException;

/**
 * The skeleton for this class was autogenerated by Torque on:
 *
 * [Thu Aug 10 13:35:35 CEST 2006]
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 */
public  class Materiales
    extends net.idtoki.instelec.model.BaseMateriales
    implements Persistent
{

private static final Logger logger = Logger.getLogger("net.idtoki.instelec.model.Materiales");


		
	public String getIdmaterialMaterialesParsed()
	{
		return FormatUtils.genericParsedStr(this.getIdmaterial() + "");
		}					

	public String getDescripcionMaterialesParsed()
	{
		return FormatUtils.genericParsedStr(this.getDescripcion());		
		}
	
	public String getCantidadMaterialesParsed()
	{
		return FormatUtils.genericParsedStr(this.getCantidad() + "");	 
		}					

		
	public String getImporteMaterialesParsed()
	{
		return FormatUtils.genericParsedStr(this.getImporte() + "");	 
		}					

		
	public String getIdtareaMaterialesParsed()
	{
		String strFK=null;
		try
		{
			strFK=this.getTareas().getULContentTareasParsed();
		}
		catch (TorqueException te) {
			logger.severe("No se ha podido localizar Tareas. getIdtareaMaterialesParsed()" );
			te.printStackTrace();
		}
		return FormatUtils.genericParsedStr(strFK);		
		}					

		
	public String getIdtipomaterialMaterialesParsed()
	{
		String strFK=null;
		try
		{
			strFK=this.getTipomateriales().getULContentTipomaterialesParsed();
		}
		catch (TorqueException te) {
			logger.severe("No se ha podido localizar Tipomateriales. getIdtipomaterialMaterialesParsed()" );
			te.printStackTrace();
		}
		return FormatUtils.genericParsedStr(strFK);		
		}					


	public String getPathMaterialesParsed(String strQueryString) throws TorqueException
	{	
	  String a = "";
	  if (strQueryString.indexOf("tareas") != -1)	  
	  	a = a + this.getTareas().getPathTareasParsed(strQueryString) + "/";
	  if (strQueryString.indexOf("tipomateriales") != -1)	  
	  	a = a + this.getTipomateriales().getPathTipomaterialesParsed(strQueryString) + "/";
	  a = a + this.getTipomateriales().getDescripcionTipomaterialesParsed();  
	  return a;
	}

	public String getULContentMaterialesParsed() throws TorqueException
	{
		return FormatUtils.genericParsedStr(this.getIdmaterial() + "-" + this.getTipomateriales().getDescripcionTipomaterialesParsed());	
	}	

	
	public String getDeleteMateriales()
	{
		return "<a href='#' class='eliminar' id='getDeleteMateriales" + this.getIdmaterial() + "'>&#160;&#160;&#160;&#160;</a>";
	}	
	public String getEditMateriales()
	{
		return "<a href='#' class='edicion' id='getEditMateriales" + this.getIdmaterial() + "'>&#160;&#160;&#160;&#160;</a>";
	}
	
	public String getImporteCalculadoMaterialesParsed() throws TorqueException,DataSetException
	{
		return (double)Math.round(this.getImporte()*this.getCantidad()*100)/100 + "";
	}		

}
