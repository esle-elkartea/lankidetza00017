package net.idtoki.instelec.manager;

import org.apache.torque.TorqueException;
import org.apache.torque.util.Criteria;

import com.workingdogs.village.DataSetException;

import net.idtoki.instelec.model.MaterialesPeer;
import net.idtoki.instelec.model.OrdenestrabajoPeer;
import net.idtoki.instelec.model.TareasPeer;
import net.idtoki.instelec.model.TrabajosPeer;

/**
 * The skeleton for this class was autogenerated by Torque on:
 *
 * [Wed Jul 26 13:47:22 CEST 2006]
 *
 *  You should add additional methods to this class to meet the
 *  application requirements.  This class will only be generated as
 *  long as it does not already exist in the output directory.
 */
public class TrabajosManager
    extends BaseTrabajosManager
{


//Borrado de un elemento
	public static boolean borraTrabajos(int idBorrar) {

		Criteria c=new Criteria();
		c.add(TrabajosPeer.IDTRABAJO, idBorrar);
		boolean bRet = false;
		try {
			TrabajosPeer.doDelete(c);
			bRet = true;
		} catch (TorqueException e) {
			logger.info("No se ha podido borrar en la tabla Trabajos");
			e.printStackTrace();
			bRet = false;
		}
		return bRet;
	}
	
	public static double getImporteCalculadoMaterialesTrabajos(int idTrabajo) throws TorqueException,DataSetException
	{
		Criteria c=new Criteria();
		c.add(TrabajosPeer.IDTRABAJO, idTrabajo);
		c.addJoin(OrdenestrabajoPeer.IDTRABAJO, TrabajosPeer.IDTRABAJO);
		c.addJoin(TareasPeer.IDORDEN, OrdenestrabajoPeer.IDORDEN);
		c.addJoin(MaterialesPeer.IDTAREA, TareasPeer.IDTAREA);
		c.addSelectColumn("SUM(" + MaterialesPeer.IMPORTE + "*" + MaterialesPeer.CANTIDAD + ")");
		  java.util.List result = MaterialesPeer.doSelectVillageRecords(c);
		  com.workingdogs.village.Record record = (com.workingdogs.village.Record) result.get(0);
		  return record.getValue(1).asDouble();		
	}	
	
	public static double getImporteCalculadoManoObraTrabajos(int idTrabajo) throws TorqueException,DataSetException
	{
		Criteria c=new Criteria();
		c.add(TrabajosPeer.IDTRABAJO, idTrabajo);
		c.addJoin(OrdenestrabajoPeer.IDTRABAJO, TrabajosPeer.IDTRABAJO);
		c.addSelectColumn("SUM(" + OrdenestrabajoPeer.IMPORTE +")");
		  java.util.List result = OrdenestrabajoPeer.doSelectVillageRecords(c);
		  com.workingdogs.village.Record record = (com.workingdogs.village.Record) result.get(0);
		  return record.getValue(1).asDouble();		
	}
	
	public static double getImporteCalculadoTrabajos(int idTrabajo) throws TorqueException,DataSetException
	{
		  return getImporteCalculadoManoObraTrabajos(idTrabajo) + getImporteCalculadoMaterialesTrabajos(idTrabajo);		
	}	

}


