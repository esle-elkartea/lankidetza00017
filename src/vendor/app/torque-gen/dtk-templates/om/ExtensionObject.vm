#set ($interface = "")
#if ($table.Interface)
  #set ($interface = ", $table.Interface")
#end

package ${package}.model;

#if ($table.isAbstract())
  #set ($abstract = "abstract")
#end

import java.util.logging.Logger;

import net.zylk.tools.format.FormatUtils;

import org.apache.torque.TorqueException;
import org.apache.torque.om.Persistent;

/**
#if ($addTimeStamp)
 * The skeleton for this class was autogenerated by Torque on:
 *
 * [$now]
 *
#end
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 */
public $!abstract class $table.JavaName
    extends ${package}.model.$basePrefix$table.JavaName
    implements Persistent$interface
{

private static final Logger logger = Logger.getLogger("${package}.model.$table.JavaName");

#set ($pks = $table.PrimaryKey)
#if ($pks.size() == 1)
  #set ($pk = $pks.get(0))
  #set ( $cup=$pk.Name.toUpperCase() )
  #set ($pkc=$pk.JavaName)
#end

#foreach ($col in $table.Columns)
	#set ($cnu = ${col.Name.toUpperCase()})
	#set ($cfc=$col.JavaName)
	#set ($pktype = $col.JavaNative )
		
	public String get${cfc}${table.JavaName}Parsed()
	{
#if ($col.isPrimaryKey())
		return FormatUtils.genericParsedStr(this.get$cfc() + "");
#elseif ($col.isForeignKey())
#set ( $tblFK = $table.Database.getTable($col.RelatedTableName) )
#set ( $tblFKName = $tblFK.JavaName )		
		String strFK=null;
		try
		{
			strFK=this.get${tblFKName}().getULContent${tblFKName}Parsed();
		}
		catch (TorqueException te) {
			logger.severe("No se ha podido localizar $tblFKName. get${cfc}${table.JavaName}Parsed()" );
			te.printStackTrace();
		}
		return FormatUtils.genericParsedStr(strFK);		
#elseif ($pktype == "String")
#if ($col.JavaName.toUpperCase().indexOf("FECHA")!=-1)
		return FormatUtils.genericParsedStr(FormatUtils.aaaammdd2ddmmaaaa(this.get$cfc(),"-"));		
#else
		return FormatUtils.genericParsedStr(this.get$cfc());		
#end
#else	
		return FormatUtils.genericParsedStr(this.get$cfc() + "");	 
#end
	}					

#end

	public String getPath${table.JavaName}Parsed(String strQueryString) throws TorqueException
	{	
	  String a = "";
#foreach ($fk in $table.ForeignKeys)  
#set ( $tblFK = $table.Database.getTable($fk.ForeignTableName) )
#set ( $tblFKName = $tblFK.JavaName )
#set ( $tblFKNameLC = $tblFK.JavaName.toLowerCase() )
	  if (strQueryString.indexOf("${tblFKNameLC}") != -1)	  
	  	a = a + this.get${tblFKName}().getPath${tblFKName}Parsed(strQueryString) + "/";
#end 	
	  a = a + this.get${pkc}();  
	  return a;
	}

	public String getULContent${table.JavaName}Parsed() throws TorqueException
	{
		return FormatUtils.genericParsedStr(this.get${pkc}() + "");	
	}	

#foreach ($fk in $table.Referrers)
#set ( $tblFK = $fk.Table )
#set ($tblFKName = $tblFK.JavaName )
	public String getHijos${tblFKName}${table.JavaName}()
	{
		return "<a href='#' class='hijos' id='getHijos${tblFKName}${table.JavaName}" + this.get${pkc}() + "' title='${tblFKName}'>&#160;&#160;&#160;&#160;</a>";
	}
#end
	
	public String getDelete${table.JavaName}()
	{
		return "<a href='#' class='eliminar' id='getDelete${table.JavaName}" + this.get${pkc}() + "' title='Borrar'>&#160;&#160;&#160;&#160;</a>";
	}	
	public String getEdit${table.JavaName}()
	{
		return "<a href='#' class='edicion' id='getEdit${table.JavaName}" + this.get${pkc}() + "' title='Editar'>&#160;&#160;&#160;&#160;</a>";
	}

}
